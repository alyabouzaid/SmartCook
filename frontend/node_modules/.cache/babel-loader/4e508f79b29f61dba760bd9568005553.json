{"ast":null,"code":"var _jsxFileName = \"/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/ingredientInventory/IngredientInventory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addingIngredient } from '../../actions/ingredientInventoryActions';\nimport { clearIngredients } from '../../actions/ingredientInventoryActions';\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Container from '@material-ui/core/Container';\n\nclass IngredientInventory extends React.Component {\n  addItem() {\n    let inventory = document.getElementById(\"inventory\").value;\n    let amount = document.getElementById(\"amount\").value;\n    this.props.addingIngredient({\n      \"key\": this.props.ingredientInventory.length,\n      \"description\": inventory,\n      \"amount\": amount\n    });\n  }\n\n  detailsMessage(i) {\n    // {console.log(i)}\n    var workshops_content = document.getElementById(\"itemclickedbox\");\n    workshops_content.value = i;\n    console.log(workshops_content);\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      root: {\n        backgroundColor: \"#FF0000\",\n        color: \"black\",\n        position: \"sticky\"\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Container, {\n      \"text-align\": \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Ingredient Inventory \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }\n    }, \"Ingredient:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inventory\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }\n    }, \"Amount:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"amount\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.addItem();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"add item\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, this.props.ingredientInventory.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.description, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.amount))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.clearIngredients([]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, \"clear inventory\")));\n  }\n\n} //state has entire state of app!!\n\n\nconst mapStateToProps = state => {\n  //name is by convention\n  return {\n    ingredientInventory: state.ingredientInventory\n  }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, {\n  addingIngredient,\n  clearIngredients\n})(IngredientInventory);","map":{"version":3,"sources":["/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/ingredientInventory/IngredientInventory.js"],"names":["React","connect","addingIngredient","clearIngredients","makeStyles","withTheme","Container","IngredientInventory","Component","addItem","inventory","document","getElementById","value","amount","props","ingredientInventory","length","detailsMessage","i","workshops_content","console","log","render","useStyles","theme","root","backgroundColor","color","position","map","item","description","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,mBAAN,SAAkCP,KAAK,CAACQ,SAAxC,CAAkD;AAK9CC,EAAAA,OAAO,GAAG;AAGN,QAAIC,SAAS,GAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAAtD;AACA,QAAIC,MAAM,GAAIH,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAhD;AAEA,SAAKE,KAAL,CAAWb,gBAAX,CAA4B;AACxB,aAAO,KAAKa,KAAL,CAAWC,mBAAX,CAA+BC,MADd;AAExB,qBAAeP,SAFS;AAGxB,gBAASI;AAHe,KAA5B;AAMH;;AAEDI,EAAAA,cAAc,CAACC,CAAD,EAAI;AAEd;AAEA,QAAIC,iBAAiB,GAAGT,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAxB;AACAQ,IAAAA,iBAAiB,CAACP,KAAlB,GAA0BM,CAA1B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AAEH;;AAIJG,EAAAA,MAAM,GAAG;AAGF,UAAMC,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACrCC,MAAAA,IAAI,EAAE;AACFC,QAAAA,eAAe,EAAE,SADf;AAEFC,QAAAA,KAAK,EAAE,OAFL;AAGFC,QAAAA,QAAQ,EAAE;AAHR;AAD+B,KAAZ,CAAD,CAA5B;AAUN,wBAGM,oBAAC,SAAD;AAAY,oBAAW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADL,eAER;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAA+C,MAAA,IAAI,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFQ,CANJ,eAaL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADd,eAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AAA+B,MAAA,IAAI,EAAC,OAApC;AAA4C,MAAA,IAAI,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAbK,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKpB,OAAL;AAAe,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CApBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGU,KAAKM,KAAL,CAAWC,mBAAZ,CAAiCc,GAAjC,CAAqCC,IAAI,iBAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAIKA,IAAI,CAACC,WAJV,0CAMKD,IAAI,CAACjB,MANV,CADC,CAHT,CAzBJ,eA0CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,OAAO,EAAE,MAAO,KAAKC,KAAL,CAAWZ,gBAAX,CAA4B,EAA5B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,CA1CK,CAHN;AAoDA;;AAhGgD,C,CAmGlD;;;AACA,MAAM8B,eAAe,GAAIC,KAAD,IAAW;AAAE;AACjC,SAAO;AAAElB,IAAAA,mBAAmB,EAAEkB,KAAK,CAAClB;AAA7B,GAAP,CAD+B,CAC2B;AAC7D,CAFD;;AAKA,eAAef,OAAO,CAACgC,eAAD,EAAkB;AAAE/B,EAAAA,gBAAF;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CAAgEI,mBAAhE,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addingIngredient } from '../../actions/ingredientInventoryActions';\nimport { clearIngredients } from '../../actions/ingredientInventoryActions';\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Container from '@material-ui/core/Container';\n\nclass IngredientInventory extends React.Component {\n\n\n\n\n    addItem() {\n\n\n        let inventory =  document.getElementById(\"inventory\").value\n        let amount =  document.getElementById(\"amount\").value\n\n        this.props.addingIngredient({\n            \"key\": this.props.ingredientInventory.length,\n            \"description\": inventory,\n            \"amount\":amount\n        })\n\n    }\n\n    detailsMessage(i) {\n        \n        // {console.log(i)}\n\n        var workshops_content = document.getElementById(\"itemclickedbox\");\n        workshops_content.value = i\n        console.log(workshops_content)\n        \n    }\n\n\n\n\trender() {\n\n\n        const useStyles = makeStyles((theme) => ({\n            root: {\n                backgroundColor: \"#FF0000\",\n                color: \"black\",\n                position: \"sticky\",\n\n        }}));\n\n        \n\n\t\treturn (\t\t\t\t\n        \n\n        <Container  text-align=\"center\" >\n                        \n\n\n            <h1>Ingredient Inventory </h1>\n\n            <p>\t\n                 <b>Ingredient:</b>\n\t\t\t\t<input type=\"text\" id=\"inventory\" name=\"fname\" size=\"100\" />\n\t\t\t</p>\n\n\n\n\t\t\t<p>\t\n                 <b>Amount:</b>\n\t\t\t\t<input type=\"text\" id=\"amount\" name=\"fname\" size=\"100\" />\n\t\t\t</p>\n\n\n\n            <p>\n            <button onClick={() => { this.addItem()}}>add item</button>\n            </p>\n\n\n            <ul>\n\n\n                    {(this.props.ingredientInventory).map(item => ( \n                    <div>\n\n                    {/* <button onClick={() => { this.detailsMessage( \"   \" +item.description+  \"  item number:  \"+ item.key)}}>Show date</button> */}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        {item.description} \n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        {item.amount  }\n                    </div>\n                    ))}\n            </ul>\n\n            {/* <input  id=\"itemclickedbox\" value=\"No item clicked yet\" size=\"100\"/> */}\n\n\t\t\t<p>\t\n\t\t\t\t<button onClick={() =>  this.props.clearIngredients([]) }>clear inventory</button>\n\t\t\t</p>\n\n\n\n        </Container>);\n\t}\n}\n\n//state has entire state of app!!\nconst mapStateToProps = (state) => { //name is by convention\n    return { ingredientInventory: state.ingredientInventory}; //now it will appear as props\n}\n    \n\nexport default connect(mapStateToProps, { addingIngredient,clearIngredients })(IngredientInventory);\n"]},"metadata":{},"sourceType":"module"}