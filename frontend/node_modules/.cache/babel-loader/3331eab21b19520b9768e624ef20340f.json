{"ast":null,"code":"var _jsxFileName = \"/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/landingPage/LandingPage.js\";\nimport React from \"react\";\nimport Header from \"./Header\"; // import Parallax from \"./Parallax\";\n\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MainCard from \"./MainCard\";\nimport GridPost from \"./GridPost\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  gridList: {\n    display: \"flex\",\n    paddingTop: 80,\n    paddingLeft: 100,\n    paddingRight: 100\n  }\n}));\nconst mainCardContent = {\n  title: \"Simple and fun way to start your cooking journey\",\n  description: \"Love to cook but always struggle to come up with ideas?\",\n  description2: \"SmartCook is a web app designed for all food lovers who enjoy cooking,exploring new recipes, creating recipe journals, and socializing about food/cooking\" //image: 'https://source.unsplash.com/random',\n  //imgText: 'main image description',\n  //linkText: 'Continue reading…',\n\n};\nconst gridCardContent = [{\n  heading: \"Track\",\n  title: \"Ingredient Inventory\",\n  description: \"Track all available ingredients in your pantry and fridge with ease\"\n}, {\n  heading: \"Track\",\n  title: \"Ingredient Inventory\",\n  description: \"Track all available ingredients in your pantry and fridge with ease\"\n}, {\n  heading: \"Track\",\n  title: \"Ingredient Inventory\",\n  description: \"Track all available ingredients in your pantry and fridge with ease\"\n}, {\n  heading: \"Track\",\n  title: \"Ingredient Inventory\",\n  description: \"Track all available ingredients in your pantry and fridge with ease\"\n}];\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainCard, {\n    card: mainCardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"heading\",\n    className: classes.gridCardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Main Features\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cols: 4,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, gridCardContent.map(item => {\n    return /*#__PURE__*/React.createElement(GridPost, {\n      key: item.heading,\n      content: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/landingPage/LandingPage.js"],"names":["React","Header","Button","AppBar","MainCard","GridPost","GridList","Typography","makeStyles","useStyles","theme","gridList","display","paddingTop","paddingLeft","paddingRight","mainCardContent","title","description","description2","gridCardContent","heading","LandingPage","props","classes","gridCardHeader","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,UAAU,EAAE,EAFJ;AAGRC,IAAAA,WAAW,EAAE,GAHL;AAIRC,IAAAA,YAAY,EAAE;AAJN;AAD6B,CAAZ,CAAD,CAA5B;AASA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,kDADe;AAEtBC,EAAAA,WAAW,EAAE,yDAFS;AAGtBC,EAAAA,YAAY,EACV,2JAJoB,CAKtB;AACA;AACA;;AAPsB,CAAxB;AAUA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,OAAO,EAAE,OADX;AAEEJ,EAAAA,KAAK,EAAE,sBAFT;AAGEC,EAAAA,WAAW,EACT;AAJJ,CADsB,EAOtB;AACEG,EAAAA,OAAO,EAAE,OADX;AAEEJ,EAAAA,KAAK,EAAE,sBAFT;AAGEC,EAAAA,WAAW,EACT;AAJJ,CAPsB,EAatB;AACEG,EAAAA,OAAO,EAAE,OADX;AAEEJ,EAAAA,KAAK,EAAE,sBAFT;AAGEC,EAAAA,WAAW,EACT;AAJJ,CAbsB,EAmBtB;AACEG,EAAAA,OAAO,EAAE,OADX;AAEEJ,EAAAA,KAAK,EAAE,sBAFT;AAGEC,EAAAA,WAAW,EACT;AAJJ,CAnBsB,CAAxB;AA2BA,eAAe,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEO,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEQ,OAAO,CAACC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAOE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACb,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAmB,IAAA,OAAO,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,eAAe,CAACM,GAAhB,CAAqBC,IAAD,IAAU;AAC7B,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACN,OAApB;AAA6B,MAAA,OAAO,EAAEM,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,CAPF,CADF;AAiBD","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\n// import Parallax from \"./Parallax\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MainCard from \"./MainCard\";\nimport GridPost from \"./GridPost\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridList: {\n    display: \"flex\",\n    paddingTop: 80,\n    paddingLeft: 100,\n    paddingRight: 100,\n  },\n}));\n\nconst mainCardContent = {\n  title: \"Simple and fun way to start your cooking journey\",\n  description: \"Love to cook but always struggle to come up with ideas?\",\n  description2:\n    \"SmartCook is a web app designed for all food lovers who enjoy cooking,exploring new recipes, creating recipe journals, and socializing about food/cooking\",\n  //image: 'https://source.unsplash.com/random',\n  //imgText: 'main image description',\n  //linkText: 'Continue reading…',\n};\n\nconst gridCardContent = [\n  {\n    heading: \"Track\",\n    title: \"Ingredient Inventory\",\n    description:\n      \"Track all available ingredients in your pantry and fridge with ease\",\n  },\n  {\n    heading: \"Track\",\n    title: \"Ingredient Inventory\",\n    description:\n      \"Track all available ingredients in your pantry and fridge with ease\",\n  },\n  {\n    heading: \"Track\",\n    title: \"Ingredient Inventory\",\n    description:\n      \"Track all available ingredients in your pantry and fridge with ease\",\n  },\n  {\n    heading: \"Track\",\n    title: \"Ingredient Inventory\",\n    description:\n      \"Track all available ingredients in your pantry and fridge with ease\",\n  },\n];\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className=\"landing-page-container\">{/* <Header /> */}</div>\n      <Header />\n      <MainCard card={mainCardContent} />\n      <Typography variant=\"heading\" className={classes.gridCardHeader}>\n        Main Features\n      </Typography>\n      <div className={classes.gridList}>\n        <GridList cols={4} justify=\"center\">\n          {gridCardContent.map((item) => {\n            return <GridPost key={item.heading} content={item}></GridPost>;\n          })}\n        </GridList>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}