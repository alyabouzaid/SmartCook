{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alisa\\\\SmartCook\\\\frontend\\\\src\\\\components\\\\ingredientInventory\\\\IngredientInventory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addingIngredient } from '../../actions/ingredientInventoryActions';\nimport { clearIngredients } from '../../actions/ingredientInventoryActions';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#e0f2f1\",\n    // \"#e3f2fd\",\n    color: \"black\",\n    position: \"sticky\"\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  websiteTitle: {\n    flex: 1,\n    marginLeft: 15\n  }\n}));\n\nclass IngredientInventory extends React.Component {\n  addItem() {\n    let inventory = document.getElementById(\"inventory\").value;\n    let amount = document.getElementById(\"amount\").value;\n    this.props.addingIngredient({\n      \"key\": this.props.ingredientInventory.length,\n      \"description\": inventory,\n      \"amount\": amount\n    });\n  }\n\n  detailsMessage(i) {\n    // {console.log(i)}\n    var workshops_content = document.getElementById(\"itemclickedbox\");\n    workshops_content.value = i;\n    console.log(workshops_content);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ingredientInventory\",\n      className: useStyles.root,\n      \"text-align\": \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Ingredient Inventory \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }\n    }, \"Ingredient:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inventory\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }\n    }, \"Amount:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"amount\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.addItem();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"add item\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, this.props.ingredientInventory.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.description, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.amount))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.clearIngredients([]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, \"clear inventory\")));\n  }\n\n} //state has entire state of app!!\n\n\nconst mapStateToProps = state => {\n  //name is by convention\n  return {\n    ingredientInventory: state.ingredientInventory\n  }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, {\n  addingIngredient,\n  clearIngredients\n})(IngredientInventory); // withStyles(useStyles)(","map":{"version":3,"sources":["C:/Users/alisa/SmartCook/frontend/src/components/ingredientInventory/IngredientInventory.js"],"names":["React","connect","addingIngredient","clearIngredients","makeStyles","useStyles","theme","root","backgroundColor","color","position","toolbar","borderBottom","palette","divider","websiteTitle","flex","marginLeft","IngredientInventory","Component","addItem","inventory","document","getElementById","value","amount","props","ingredientInventory","length","detailsMessage","i","workshops_content","console","log","render","map","item","description","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addingIngredient } from '../../actions/ingredientInventoryActions';\r\nimport { clearIngredients } from '../../actions/ingredientInventoryActions';\r\nimport { makeStyles  } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles ((theme) => ({\r\n    root: {\r\n      backgroundColor: \"#e0f2f1\",\r\n      // \"#e3f2fd\",\r\n      color: \"black\",\r\n      position: \"sticky\",\r\n    },\r\n    toolbar: {\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    websiteTitle: {\r\n      flex: 1,\r\n      marginLeft: 15,\r\n    },\r\n  }));\r\n\r\nclass IngredientInventory extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n    addItem() {\r\n\r\n\r\n        let inventory =  document.getElementById(\"inventory\").value\r\n        let amount =  document.getElementById(\"amount\").value\r\n\r\n        this.props.addingIngredient({\r\n            \"key\": this.props.ingredientInventory.length,\r\n            \"description\": inventory,\r\n            \"amount\":amount\r\n        })\r\n\r\n    }\r\n\r\n    detailsMessage(i) {\r\n        \r\n        // {console.log(i)}\r\n\r\n        var workshops_content = document.getElementById(\"itemclickedbox\");\r\n        workshops_content.value = i\r\n        console.log(workshops_content)\r\n        \r\n    }\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\t\t\t\t\r\n        \r\n\r\n        <div id=\"ingredientInventory\" className={useStyles.root} text-align=\"center\" >\r\n                        \r\n\r\n\r\n            <h1>Ingredient Inventory </h1>\r\n\r\n            <p>\t\r\n                 <b>Ingredient:</b>\r\n\t\t\t\t<input type=\"text\" id=\"inventory\" name=\"fname\" size=\"100\" />\r\n\t\t\t</p>\r\n\r\n\r\n\r\n\t\t\t<p>\t\r\n                 <b>Amount:</b>\r\n\t\t\t\t<input type=\"text\" id=\"amount\" name=\"fname\" size=\"100\" />\r\n\t\t\t</p>\r\n\r\n\r\n\r\n            <p>\r\n            <button onClick={() => { this.addItem()}}>add item</button>\r\n            </p>\r\n\r\n\r\n            <ul>\r\n\r\n\r\n                    {(this.props.ingredientInventory).map(item => ( \r\n                    <div>\r\n\r\n                    {/* <button onClick={() => { this.detailsMessage( \"   \" +item.description+  \"  item number:  \"+ item.key)}}>Show date</button> */}\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {item.description} \r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {item.amount  }\r\n                    </div>\r\n                    ))}\r\n            </ul>\r\n\r\n            {/* <input  id=\"itemclickedbox\" value=\"No item clicked yet\" size=\"100\"/> */}\r\n\r\n\t\t\t<p>\t\r\n\t\t\t\t<button onClick={() =>  this.props.clearIngredients([]) }>clear inventory</button>\r\n\t\t\t</p>\r\n\r\n\r\n\r\n        </div>);\r\n\t}\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return { ingredientInventory: state.ingredientInventory}; //now it will appear as props\r\n}\r\n    \r\n\r\nexport default connect(mapStateToProps, { addingIngredient,clearIngredients })(IngredientInventory);\r\n// withStyles(useStyles)("]},"metadata":{},"sourceType":"module"}