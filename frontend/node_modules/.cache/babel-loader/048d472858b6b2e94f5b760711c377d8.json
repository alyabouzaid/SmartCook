{"ast":null,"code":"var _jsxFileName = \"/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/recipe/recommendation.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RecipeCard from \"./recipeCard\";\nimport Button from \"@material-ui/core/Button\";\nimport { ingredientList } from \"./constants\";\nimport { recipeList } from \"./constants\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: '3%'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  }\n}));\nexport default function Recommendation() {\n  const classes = useStyles();\n  let initialState = {};\n  ingredientList.forEach(ingredient => {\n    initialState[ingredient] = false;\n  });\n  const [state, setState] = React.useState(initialState);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const getRecommendation = () => {\n    fetch(\"https://api.edamam.com/search?q=chicken%26curry%26onion%26basil&app_id=43011121&app_key\" + \"=8ded8a6fbd319218357df399687664aa&from=0&to=10&calories=591-722&health=alcohol-free\", {\n      method: 'GET'\n    }).then(res => res.json()).then(res => {\n      setState({ ...state,\n        recommendation: res\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Select Your Ingredients\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, ingredientList.map(ingredient => /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.ingredient,\n      onChange: handleChange,\n      name: ingredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 42\n      }\n    }),\n    label: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: getRecommendation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Generate Recommendation\")), state.recommendation && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, state.recommendation[\"hits\"].map(recipe => /*#__PURE__*/React.createElement(RecipeCard, {\n    recipe: recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/recipe/recommendation.js"],"names":["React","makeStyles","FormLabel","FormControl","FormGroup","FormControlLabel","Checkbox","RecipeCard","Button","ingredientList","recipeList","useStyles","theme","root","display","flexWrap","margin","formControl","spacing","Recommendation","classes","initialState","forEach","ingredient","state","setState","useState","handleChange","event","target","name","checked","getRecommendation","fetch","method","then","res","json","recommendation","map","recipe"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RecipeCard from \"./recipeCard\";\nimport Button from \"@material-ui/core/Button\";\nimport {ingredientList} from \"./constants\";\nimport {recipeList} from \"./constants\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: '3%',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n}));\n\nexport default function Recommendation() {\n    const classes = useStyles();\n    let initialState = {};\n    ingredientList.forEach((ingredient) => {\n        initialState[ingredient] = false;\n    });\n    const [state, setState] = React.useState(initialState);\n\n    const handleChange = (event) => {\n        setState({...state, [event.target.name]: event.target.checked});\n    };\n\n    const getRecommendation = () => {\n        fetch(\"https://api.edamam.com/search?q=chicken%26curry%26onion%26basil&app_id=43011121&app_key\" +\n            \"=8ded8a6fbd319218357df399687664aa&from=0&to=10&calories=591-722&health=alcohol-free\", {\n            method: 'GET',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                   setState({...state, recommendation: res})\n            })\n    };\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Select Your Ingredients</FormLabel>\n                    <FormGroup>\n                        {ingredientList.map((ingredient) =>\n                            <FormControlLabel\n                                control={<Checkbox checked={state.ingredient} onChange={handleChange}\n                                                   name={ingredient}/>}\n                                label={ingredient}\n                            />\n                        )}\n                    </FormGroup>\n                </FormControl>\n            </div>\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={getRecommendation}>\n                    Generate Recommendation\n                </Button>\n            </div>\n            {   state.recommendation &&\n                <div className={classes.root}>\n                    {state.recommendation[\"hits\"].map(recipe =>\n                        <RecipeCard recipe={recipe}/>\n                    )\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}