{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alisa\\\\SmartCook\\\\frontend\\\\src\\\\IngredientInventory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addingIngredient } from '../actions';\nimport { clearIngredients } from '../actions';\n\nclass IngredientInventory extends React.Component {\n  addMessage() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = mm + '/' + dd + '/' + yyyy;\n    let text = document.getElementById(\"fname\").value;\n    this.props.addingIngredient({\n      \"key\": this.props.messages.length,\n      \"date\": today,\n      \"speaker\": \"you\",\n      \"description\": text\n    });\n  }\n\n  detailsMessage(i) {\n    {\n      console.log(i);\n    }\n    var workshops_content = document.getElementById(\"itemclickedbox\");\n    workshops_content.value = i;\n    console.log(workshops_content);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chatboxhome\",\n      className: \"content\",\n      \"text-align\": \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"fname\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.addMessage();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, \"send message\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.props.messages.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.detailsMessage(item.date + \"   \" + item.description + \"  item number:  \" + item.key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Show date\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.description))), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"itemclickedbox\",\n      value: \"No item clicked yet\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.clearIngredients([]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, \"clear messages\")));\n  }\n\n} //state has entire state of app!!\n\n\nconst mapStateToProps = state => {\n  //name is by convention\n  return {\n    messages: state.messages\n  }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, {\n  addingIngredient,\n  clearIngredients\n})(IngredientInventory);","map":{"version":3,"sources":["C:/Users/alisa/SmartCook/frontend/src/IngredientInventory.js"],"names":["React","connect","addingIngredient","clearIngredients","IngredientInventory","Component","addMessage","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","text","document","getElementById","value","props","messages","length","detailsMessage","i","console","log","workshops_content","render","map","item","date","description","key","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addingIngredient } from '../actions';\r\nimport { clearIngredients } from '../actions';\r\n\r\nclass IngredientInventory extends React.Component {\r\n\r\n\r\n\r\n\r\n     addMessage() {\r\n\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        today = mm + '/' + dd + '/' + yyyy;\r\n\r\n        let text =  document.getElementById(\"fname\").value\r\n\r\n        this.props.addingIngredient({\r\n            \"key\": this.props.messages.length,\r\n            \"date\": today,\r\n            \"speaker\":\"you\",\r\n            \"description\": text\r\n        })\r\n\r\n    }\r\n\r\n    detailsMessage(i) {\r\n        \r\n        {console.log(i)}\r\n\r\n        var workshops_content = document.getElementById(\"itemclickedbox\");\r\n        workshops_content.value = i\r\n        console.log(workshops_content)\r\n        \r\n    }\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\t\t\t\t\r\n        \r\n\r\n        <div id=\"chatboxhome\" className=\"content\" text-align=\"center\" >\r\n                        \r\n\r\n\t\t\t<p>\t\r\n\t\t\t\t<input type=\"text\" id=\"fname\" name=\"fname\" size=\"100\"/>\r\n\t\t\t</p>\r\n\r\n\r\n\r\n\t\t\t<p>\t\r\n\t\t\t\t<button onClick={() => { this.addMessage()}}>send message</button>\r\n\t\t\t</p>\r\n\r\n            <ul>\r\n                    {(this.props.messages).map(item => ( \r\n                    <div>\r\n\r\n                    <button onClick={() => { this.detailsMessage(item.date +\"   \" +item.description+  \"  item number:  \"+ item.key)}}>Show date</button>\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        { item.description  }\r\n\r\n\r\n                    </div>\r\n                    ))}\r\n            </ul>\r\n\r\n            <input  id=\"itemclickedbox\" value=\"No item clicked yet\" size=\"100\"/>\r\n\t\t\t<p>\t\r\n\t\t\t\t<button onClick={() =>  this.props.clearIngredients([]) }>clear messages</button>\r\n\t\t\t</p>\r\n\r\n\r\n\r\n        </div>);\r\n\t}\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return { messages: state.messages}; //now it will appear as props\r\n}\r\n    \r\n\r\nexport default connect(mapStateToProps, { addingIngredient,clearIngredients })(IngredientInventory);\r\n"]},"metadata":{},"sourceType":"module"}