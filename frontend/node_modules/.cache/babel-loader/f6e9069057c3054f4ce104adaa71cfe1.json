{"ast":null,"code":"var _jsxFileName = \"/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/ingredientInventory/IngredientInventory.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addingIngredient } from \"../../actions/ingredientInventoryActions\";\nimport { clearIngredients } from \"../../actions/ingredientInventoryActions\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Container from \"@material-ui/core/Container\";\n\nclass IngredientInventory extends React.Component {\n  addItem() {\n    let inventory = document.getElementById(\"inventory\").value;\n    let amount = document.getElementById(\"amount\").value;\n    this.props.addingIngredient({\n      key: this.props.ingredientInventory.length,\n      description: inventory,\n      amount: amount\n    });\n  }\n\n  detailsMessage(i) {\n    // {console.log(i)}\n    var workshops_content = document.getElementById(\"itemclickedbox\");\n    workshops_content.value = i;\n    console.log(workshops_content);\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      root: {\n        backgroundColor: \"#FF0000\",\n        color: \"black\",\n        position: \"sticky\"\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Container, {\n      \"text-align\": \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Ingredient Inventory \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Ingredient:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inventory\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Amount:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"amount\",\n      name: \"fname\",\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.addItem();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"add item\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, this.props.ingredientInventory.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.description, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", item.amount))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.clearIngredients([]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"clear inventory\")));\n  }\n\n} //state has entire state of app!!\n\n\nconst mapStateToProps = state => {\n  //name is by convention\n  return {\n    ingredientInventory: state.ingredientInventory\n  }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, {\n  addingIngredient,\n  clearIngredients\n})(IngredientInventory);","map":{"version":3,"sources":["/Users/peterlin/Sheena/CPSC_436/SmartCook/frontend/src/components/ingredientInventory/IngredientInventory.js"],"names":["React","connect","addingIngredient","clearIngredients","makeStyles","withTheme","Header","Container","IngredientInventory","Component","addItem","inventory","document","getElementById","value","amount","props","key","ingredientInventory","length","description","detailsMessage","i","workshops_content","console","log","render","useStyles","theme","root","backgroundColor","color","position","map","item","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addingIngredient } from \"../../actions/ingredientInventoryActions\";\nimport { clearIngredients } from \"../../actions/ingredientInventoryActions\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Container from \"@material-ui/core/Container\";\n\nclass IngredientInventory extends React.Component {\n  addItem() {\n    let inventory = document.getElementById(\"inventory\").value;\n    let amount = document.getElementById(\"amount\").value;\n\n    this.props.addingIngredient({\n      key: this.props.ingredientInventory.length,\n      description: inventory,\n      amount: amount,\n    });\n  }\n\n  detailsMessage(i) {\n    // {console.log(i)}\n\n    var workshops_content = document.getElementById(\"itemclickedbox\");\n    workshops_content.value = i;\n    console.log(workshops_content);\n  }\n\n  render() {\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        backgroundColor: \"#FF0000\",\n        color: \"black\",\n        position: \"sticky\",\n      },\n    }));\n\n    return (\n      <Container text-align=\"center\">\n        <Header />\n\n        <h1>Ingredient Inventory </h1>\n\n        <p>\n          <b>Ingredient:</b>\n          <input type=\"text\" id=\"inventory\" name=\"fname\" size=\"100\" />\n        </p>\n\n        <p>\n          <b>Amount:</b>\n          <input type=\"text\" id=\"amount\" name=\"fname\" size=\"100\" />\n        </p>\n\n        <p>\n          <button\n            onClick={() => {\n              this.addItem();\n            }}\n          >\n            add item\n          </button>\n        </p>\n\n        <ul>\n          {this.props.ingredientInventory.map((item) => (\n            <div>\n              {/* <button onClick={() => { this.detailsMessage( \"   \" +item.description+  \"  item number:  \"+ item.key)}}>Show date</button> */}\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              {item.description}\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              {item.amount}\n            </div>\n          ))}\n        </ul>\n\n        {/* <input  id=\"itemclickedbox\" value=\"No item clicked yet\" size=\"100\"/> */}\n\n        <p>\n          <button onClick={() => this.props.clearIngredients([])}>\n            clear inventory\n          </button>\n        </p>\n      </Container>\n    );\n  }\n}\n\n//state has entire state of app!!\nconst mapStateToProps = (state) => {\n  //name is by convention\n  return { ingredientInventory: state.ingredientInventory }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, { addingIngredient, clearIngredients })(\n  IngredientInventory\n);\n"]},"metadata":{},"sourceType":"module"}